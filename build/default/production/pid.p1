Version 4.0 HI-TECH Software Intermediate Code
"5 pid.c
[; ;pid.c: 5: static float setpoint = (200.0f);
[v _setpoint `f ~T0 @X0 1 s ]
[i _setpoint
-> .200.0 `f
]
"6
[; ;pid.c: 6: static float kp = 1.0;
[v _kp `f ~T0 @X0 1 s ]
[i _kp
-> .1.0 `f
]
"7
[; ;pid.c: 7: static float ki = 0.01;
[v _ki `f ~T0 @X0 1 s ]
[i _ki
-> .0.01 `f
]
"8
[; ;pid.c: 8: static float kd = 0.0;
[v _kd `f ~T0 @X0 1 s ]
[i _kd
-> .0.0 `f
]
"10
[; ;pid.c: 10: static float ek1 = 0.0;
[v _ek1 `f ~T0 @X0 1 s ]
[i _ek1
-> .0.0 `f
]
"11
[; ;pid.c: 11: static float ek2 = 0.0;
[v _ek2 `f ~T0 @X0 1 s ]
[i _ek2
-> .0.0 `f
]
"12
[; ;pid.c: 12: static float uk1 = 0.0;
[v _uk1 `f ~T0 @X0 1 s ]
[i _uk1
-> .0.0 `f
]
"14
[; ;pid.c: 14: void pid_init(void) {
[v _pid_init `(v ~T0 @X0 1 ef ]
{
[e :U _pid_init ]
[f ]
"16
[; ;pid.c: 16: }
[e :UE 1 ]
}
"18
[; ;pid.c: 18: void pid_set_setpoint(float s) {
[v _pid_set_setpoint `(v ~T0 @X0 1 ef1`f ]
{
[e :U _pid_set_setpoint ]
[v _s `f ~T0 @X0 1 r1 ]
[f ]
"19
[; ;pid.c: 19:     setpoint = s;
[e = _setpoint _s ]
"20
[; ;pid.c: 20: }
[e :UE 2 ]
}
"22
[; ;pid.c: 22: float pid_get_setpoint(void) {
[v _pid_get_setpoint `(f ~T0 @X0 1 ef ]
{
[e :U _pid_get_setpoint ]
[f ]
"23
[; ;pid.c: 23:     return setpoint;
[e ) _setpoint ]
[e $UE 3  ]
"24
[; ;pid.c: 24: }
[e :UE 3 ]
}
"26
[; ;pid.c: 26: uint8_t pid_execute(float sensor) {
[v _pid_execute `(uc ~T0 @X0 1 ef1`f ]
{
[e :U _pid_execute ]
[v _sensor `f ~T0 @X0 1 r1 ]
[f ]
"27
[; ;pid.c: 27:     float ek = setpoint - sensor;
[v _ek `f ~T0 @X0 1 a ]
[e = _ek - _setpoint _sensor ]
"28
[; ;pid.c: 28:     float uk = uk1 + kp * (ek - ek1) + ki * (ek / 2.0f + ek1 / 2.0f) + kd * (ek + 2 * ek1 + ek2);
[v _uk `f ~T0 @X0 1 a ]
[e = _uk + + + _uk1 * _kp - _ek _ek1 * _ki + / _ek -> .2.0 `f / _ek1 -> .2.0 `f * _kd + + _ek * -> -> 2 `i `f _ek1 _ek2 ]
"29
[; ;pid.c: 29:     if (uk > 100.0)
[e $ ! > -> _uk `d .100.0 5  ]
"30
[; ;pid.c: 30:         uk = 100.0;
[e = _uk -> .100.0 `f ]
[e :U 5 ]
"31
[; ;pid.c: 31:     if (uk < 0.0)
[e $ ! < -> _uk `d .0.0 6  ]
"32
[; ;pid.c: 32:         uk = 0.0;
[e = _uk -> .0.0 `f ]
[e :U 6 ]
"34
[; ;pid.c: 34:     ek2 = ek1;
[e = _ek2 _ek1 ]
"35
[; ;pid.c: 35:     ek1 = ek;
[e = _ek1 _ek ]
"36
[; ;pid.c: 36:     uk1 = uk;
[e = _uk1 _uk ]
"38
[; ;pid.c: 38:     return (uint8_t) uk;
[e ) -> _uk `uc ]
[e $UE 4  ]
"42
[; ;pid.c: 42: }
[e :UE 4 ]
}
